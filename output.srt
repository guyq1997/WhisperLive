1
00:00:01,024 --> 00:00:06,464
OK,那么现在呢,我把这个回传的频率调到0.5秒一次

2
00:00:06,964 --> 00:00:11,464
哇哦那这个效果明显就变好了

3
00:00:11,464 --> 00:00:16,783
他一下子就给我把这个转录的文字呢

4
00:00:16,783 --> 00:00:19,583
实时的给我传到这个GUI上面

5
00:00:19,583 --> 00:00:25,704
然后基本上大概延迟个一两秒的时间

6
00:00:25,704 --> 00:00:36,624
我就能够看到这个我所说的话了

7
00:00:36,624 --> 00:00:38,024
非常的快

8
00:00:38,024 --> 00:00:42,423
就是仅仅是把这个核弹频率调到0.5秒一次

9
00:00:42,954 --> 00:00:46,793
呃他就就感觉上呃快了很多

10
00:00:47,194 --> 00:00:49,194
那么也就是说

11
00:00:49,194 --> 00:00:57,514
那么我现在在后端再来看一下我这个CPU占用率是多少

12
00:00:57,514 --> 00:01:02,314
我看看啊

13
00:01:05,054 --> 00:01:10,593
那么可以看到现在这个CPU内存是占用了比较多

14
00:01:10,593 --> 00:01:14,793
内存是占用了562个兆

15
00:01:16,894 --> 00:01:20,813
谷歌浏览器和Cursor占用的比较多

16
00:01:20,813 --> 00:01:23,813
cursor占用了一百一千多个帐

17
00:01:24,373 --> 00:01:26,373
谷歌这400度我感觉还可以

18
00:01:26,373 --> 00:01:29,754
那麼CPU

19
00:01:29,754 --> 00:01:32,703
呃

20
00:01:32,703 --> 00:01:35,584
CPU占了9.2%也还可以

21
00:01:35,584 --> 00:01:37,584
也就是他这个能耗并不是特别的高

22
00:01:38,174 --> 00:01:41,453
还行就是这个内存可能占了有点高

23
00:01:41,453 --> 00:01:45,054
因为它这个模型它要计算嘛

24
00:01:47,953 --> 00:01:51,034
很流畅很流畅我很喜欢我很满意

25
00:01:52,174 --> 00:02:05,174
这个软件可以说是这个OpenAI的GPT Transcribe模型的一个非常好的一个替代版

26
00:02:06,724 --> 00:02:10,003
即使是small的模型,它也非常

